(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{230:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(11),i=(n(0),n(242)),o={id:"unique-aspects",title:"Unique Aspects",sidebar_label:"Unique Aspects"},l={id:"unique-aspects",isDocsHomePage:!1,title:"Unique Aspects",description:"Dark being connected to the editor and infrastructure allows for unique language",source:"@site/docs/unique-aspects.md",permalink:"/unique-aspects",sidebar_label:"Unique Aspects",sidebar:"docs",previous:{title:"Language Overview",permalink:"/languageoverview"},next:{title:"Functional Aspects",permalink:"/functional-aspects"}},c=[{value:"Play &amp; Replay Buttons",id:"play--replay-buttons",children:[]},{value:"Function Versioning",id:"function-versioning",children:[]},{value:"Functions that use Error Rail",id:"functions-that-use-error-rail",children:[]},{value:"Taking Functions off the Error Rail",id:"taking-functions-off-the-error-rail",children:[]}],u={rightToc:c};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Dark being connected to the editor and infrastructure allows for unique language\nfunctionality."),Object(i.b)("h2",{id:"play--replay-buttons"},"Play & Replay Buttons"),Object(i.b)("p",null,"The language being connected to the editor and infrastructure allows interactive\nfunctions."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Functions that do not have side effects (like ",Object(i.b)("inlineCode",{parentName:"li"},"Int::add"),") run automatically."),Object(i.b)("li",{parentName:"ul"},"Functions with side effects have play buttons. Press the play button to\nexecute the function for the selected trace.")),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/img/unique/playbutton.png",alt:"unique/playbutton.png"}))),Object(i.b)("p",null,"The replay icon indicates the function has been executed already. Pressing it\nexecutes the code for the trace again."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/img/unique/replaybutton.png",alt:"unique/replaybutton.png"}))),Object(i.b)("p",null,"Replay an entire handler for the selected trace (including all functions within\nthe handler) in the upper right. This would replay ",Object(i.b)("inlineCode",{parentName:"p"},"DB::generateKey")," and\n",Object(i.b)("inlineCode",{parentName:"p"},"DB::set"),"."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/img/unique/replayhandler.png",alt:"unique/replayhandler.png"}))),Object(i.b)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/nhShq-HCFxs",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}),Object(i.b)("h2",{id:"function-versioning"},"Function Versioning"),Object(i.b)("p",null,"You can see that many standard library items are labeled \u201c",Object(i.b)("inlineCode",{parentName:"p"},"v3"),"\u201d or \u201c",Object(i.b)("inlineCode",{parentName:"p"},"v1"),"\u201d in the\neditor. These refer to the version of the function. When you start a new canvas,\nyou will always have the latest versions. If we upgrade, you\u2019ll have the choice\nto do so, but can continue to use the old ones."),Object(i.b)("h2",{id:"functions-that-use-error-rail"},"Functions that use Error Rail"),Object(i.b)("p",null,"Functions that return Result or Option Types (like ",Object(i.b)("inlineCode",{parentName:"p"},"DB::get")," and\n",Object(i.b)("inlineCode",{parentName:"p"},"HttpClient::get"),") are handled by the Error Rail by default. The documentation\nin the editor indicates if this is the case for a given function."),Object(i.b)("p",null,"The error rail allows you to keep writing code along the \u201chappy path,\u201d without\nstopping. This is based on\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://medium.com/darklang/real-problems-with-functional-languages-efe668c5264a"}),"Railway Oriented Programming"),".\nThe idea is that when you call a function which might not succeed, you can keep\ngoing. For example, if you try to look up a value in a dictionary or database,\nwe don't make you immediately handle the error case."),Object(i.b)("p",null,"An expression that returns to the rail has a signifier on the right hand side.\nBefore it runs, there is a dotted line and no indication of a happy case or\nerror."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/img/unique/railnotyetrun.png",alt:"unique/railnotyetrun.png"}))),Object(i.b)("p",null,"Once it runs, it will show the happy case (circle) or error case (error\nsignifier)."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/img/unique/errorrail_success.png",alt:"unique/railnotyetrun.png"})),"\n",Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/img/unique/errorrail_failure.png",alt:"unique/railnotyetrun.png"}))),Object(i.b)("p",null,'In the case of a "happy" value, you can just ignore the result and option type -\nwe unwrap them automatically, as seen above. In the case of an error, the\nexecution will end (similar to throwing an exception that isn\'t caught).'),Object(i.b)("p",null,"There are two different types that both operate this way: the Result Type\n(",Object(i.b)("inlineCode",{parentName:"p"},"OK"),"/",Object(i.b)("inlineCode",{parentName:"p"},"Error")," or the Option type ",Object(i.b)("inlineCode",{parentName:"p"},"Just val")," or ",Object(i.b)("inlineCode",{parentName:"p"},"Nothing"),"). Dark returns a 500\nerror for bad results and a 404 for bad Options."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Happy Case"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Error Case"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Result type"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"OK val"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Error message")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Option type"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Just val"),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Nothing")))),Object(i.b)("p",null,"In the case above, when the function is on the rail, the value is as follows."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/img/unique/onrail_value.png",alt:"unique/onrail_value.png"}))),Object(i.b)("h2",{id:"taking-functions-off-the-error-rail"},"Taking Functions off the Error Rail"),Object(i.b)("p",null,"When you are ready to handle error cases, you remove them from the rail by using\nthe editor command ",Object(i.b)("inlineCode",{parentName:"p"},"take-function-off-rail")," (open the Command palette by hitting\n",Object(i.b)("inlineCode",{parentName:"p"},"Ctrl-\\")," ",Object(i.b)("strong",{parentName:"p"},"on the function name"),"). This will unwrap the values."),Object(i.b)("p",null,"In this case it unwraps to ",Object(i.b)("inlineCode",{parentName:"p"},"Just val")," and the behavior would be the same for\nfunctions that would return ",Object(i.b)("inlineCode",{parentName:"p"},"Ok val"),"."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/img/unique/offrail_value.png",alt:"unique/offrail_value.png"}))),Object(i.b)("p",null,"When the function is off the rail, instead of execution halting, you will handle\nit yourself."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/img/unique/offrail_error.png",alt:"unique/offrail_value.png"}))),Object(i.b)("p",null,"Handling these errors is best done using a Match statement."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/img/unique/match.png",alt:"unique/match.png"}))),Object(i.b)("p",null,"Live values on Match statements will show which branch executed. In this case,\nthe first arm of the branch ",Object(i.b)("inlineCode",{parentName:"p"},"Just result")," executed, and ",Object(i.b)("inlineCode",{parentName:"p"},"Nothing")," did not."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"/img/unique/match_just.png",alt:"unique/match.png"}))),Object(i.b)("p",null,"More on Match is available in\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://darklang.github.io/docs/functional-aspects"}),"Functional Aspects of Dark"),",\nand there is a sample ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://darklang.com/a/sample-match"}),"here"),"."))}p.isMDXComponent=!0},242:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=r.a.createContext({}),p=function(e){var t=r.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=p(e.components);return r.a.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},h=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),b=p(n),h=a,d=b["".concat(o,".").concat(h)]||b[h]||s[h]||i;return n?r.a.createElement(d,l(l({ref:t},u),{},{components:n})):r.a.createElement(d,l({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=h;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);