(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{220:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(2),a=n(11),i=(n(0),n(241)),o={title:"A tour of the Backend"},c={id:"contributing/tour-of-backend",isDocsHomePage:!1,title:"A tour of the Backend",description:"The journey of a HTTP request",source:"@site/docs/contributing/tour-of-backend.md",permalink:"/contributing/tour-of-backend",sidebar:"Contributing",previous:{title:"A tour of the Editor",permalink:"/contributing/tour-of-editor"},next:{title:"Repository directory structure",permalink:"/contributing/repo-layout"}},l=[{value:"The journey of a HTTP request",id:"the-journey-of-a-http-request",children:[]},{value:"Traces",id:"traces",children:[]},{value:"Serialization",id:"serialization",children:[]},{value:"<code>Libexecution</code> and the editor",id:"libexecution-and-the-editor",children:[]},{value:"Standard library",id:"standard-library",children:[]}],s={rightToc:l};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"the-journey-of-a-http-request"},"The journey of a HTTP request"),Object(i.b)("p",null,"When the users of a Dark developer's app (we refer to them as \"grand-users\") makes a request to a Dark app, it makes it's way directly to the developer's editor."),Object(i.b)("p",null,"Here's the journey it takes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Google Load Balancer"),Object(i.b)("li",{parentName:"ul"},"Nginx sidecar container"),Object(i.b)("li",{parentName:"ul"},"the OCaml webserver in the ",Object(i.b)("inlineCode",{parentName:"li"},"bwd")," container"),Object(i.b)("li",{parentName:"ul"},"our webserver is the OCaml ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/mirage/ocaml-cohttp"}),"Cohttp library"),", and it directs the request\nto ",Object(i.b)("inlineCode",{parentName:"li"},"backend/libbackend/webserver.ml:user_page_handler")),Object(i.b)("li",{parentName:"ul"},"if it's a 404, the event is stored in the ",Object(i.b)("inlineCode",{parentName:"li"},"stored_events_v2")," table and\nsent to the client via Stroller (a sort of reverse proxy written in\nRust)"),Object(i.b)("li",{parentName:"ul"},'if a page is found, the request is turned into an "input value",\nwhich is turned into a set of variables and passed to\n',Object(i.b)("inlineCode",{parentName:"li"},"Analysis.execute_handler")," which calls ",Object(i.b)("inlineCode",{parentName:"li"},"AST.exec")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"AST.exec")," runs the Dark code, saving parts of the trace as it goes.\nInput values, function arguments and return values are saved in\nPostgres tables ",Object(i.b)("inlineCode",{parentName:"li"},"stored_events_v2"),", ",Object(i.b)("inlineCode",{parentName:"li"},"function_arguments")," and\n",Object(i.b)("inlineCode",{parentName:"li"},"function_results_v2")),Object(i.b)("li",{parentName:"ul"},"A trace is pushed to Stroller, which sends it via ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://pusher.com"}),"Pusher")," to the\neditor, where it appears as a dot on the canvas"),Object(i.b)("li",{parentName:"ul"},"When a user clicks on the trace, the trace is loaded from the server.\nA web worker named ",Object(i.b)("inlineCode",{parentName:"li"},"Fetcher")," fetches the trace in the background,\ndecodes it, and sends the value to the editor. On the server-side, it\nis fetched from ",Object(i.b)("inlineCode",{parentName:"li"},"backend/libbackend/analysis.ml:handler_trace"))),Object(i.b)("h2",{id:"traces"},"Traces"),Object(i.b)("p",null,'A trace is a combination of an event (referred to in Dark as an "input value"\nand in the code as ',Object(i.b)("inlineCode",{parentName:"p"},"StoredEvent"),"), and the arguments and results of functions\ncalled during the trace:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"event refers to the HTTP request, worker event, or in the case of Crons, an\nempty value, that is used to trigger the event handler"),Object(i.b)("li",{parentName:"ul"},"the trace includes information for every call to every function during the\nevent. For built-in functions, we record a hash of the arguments and the\nresult. For canvas functions, we also store the arguments to the function.")),Object(i.b)("h2",{id:"serialization"},"Serialization"),Object(i.b)("p",null,"Dark programs are directly serialized in our database, and loaded for\nany requests that come in. Each change in the editor creates an Op for\nthat toplevel (DB, handler, function, etc). That is appended to the\nlist of previous ops for that handler, and serialized into the DB in an\nefficient binary format."),Object(i.b)("p",null,"The ops contain the entire handler or function, which is much slower\nthan it could be (part of the reason that ",Object(i.b)("inlineCode",{parentName:"p"},"undo")," is so slow."),Object(i.b)("p",null,"We cache/denormalize the current code for each handler, which makes\nrequests fast."),Object(i.b)("p",null,"One downside of this is that we have to be very careful what changes we\nmake the Dark AST definition. There is a doc in the dark repo\ndiscussing this in more detail."),Object(i.b)("h2",{id:"libexecution-and-the-editor"},Object(i.b)("inlineCode",{parentName:"h2"},"Libexecution")," and the editor"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"libexecution"),' is the "execution engine" of Dark. The same code is compiled to native code to respond to HTTP handlers, and is also compiled to Javascript to run in the editor.'),Object(i.b)("p",null,"The play button on functions and on handlers executes the code on the\nserver, returning updates to the trace of those functions. In all other\ncases, the editor runs code in the JS version, filling in the results\nof the functions it doesn't have access to from the traces."),Object(i.b)("h2",{id:"standard-library"},"Standard library"),Object(i.b)("p",null,"The standard library is split between ",Object(i.b)("inlineCode",{parentName:"p"},"backend/libexecution/lib*.ml"),"\n(for functions which are available on the client and backend) and\n",Object(i.b)("inlineCode",{parentName:"p"},"backend/libbackend/lib*.ml")," for functions which are only available on\nthe backend (typically functions where we cannot compile some library\nto JS)."))}u.isMDXComponent=!0},241:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return p}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),u=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=u(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},h=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(n),h=r,p=d["".concat(o,".").concat(h)]||d[h]||b[h]||i;return n?a.a.createElement(p,c(c({ref:t},s),{},{components:n})):a.a.createElement(p,c({ref:t},s))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);