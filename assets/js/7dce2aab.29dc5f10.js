"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6240],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),k=c(n),u=l,d=k["".concat(s,".").concat(u)]||k[u]||h[u]||o;return n?a.createElement(d,i(i({ref:t},p),{},{components:n})):a.createElement(d,i({ref:t},p))}));function u(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,i=new Array(o);i[0]=k;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:l,i[1]=r;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},33706:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>r,contentTitle:()=>s,metadata:()=>c,toc:()=>p,default:()=>k});var a=n(87462),l=n(63366),o=(n(67294),n(3905)),i=["components"],r={id:"channel-check",title:"Check for New Channels",sidebar_label:"Check for New Channels"},s=void 0,c={unversionedId:"slack-apps/tutorials/channel-check",id:"slack-apps/tutorials/channel-check",isDocsHomePage:!1,title:"Check for New Channels",description:"It can be hard to keep up with all of the changes in your Slack workspace! This",source:"@site/docs/slack-apps/tutorials/channel-check.md",sourceDirName:"slack-apps/tutorials",slug:"/slack-apps/tutorials/channel-check",permalink:"/slack-apps/tutorials/channel-check",editUrl:"https://github.com/darklang/docs/edit/main/docs/slack-apps/tutorials/channel-check.md",tags:[],version:"current",frontMatter:{id:"channel-check",title:"Check for New Channels",sidebar_label:"Check for New Channels"},sidebar:"Slack",previous:{title:"Slack Packages",permalink:"/slack-apps/slack-packages"},next:{title:"Create Asana Projects & Tasks",permalink:"/slack-apps/tutorials/asana-tutorial"}},p=[{value:"Slack Configuration",id:"slack-configuration",children:[],level:2},{value:"Building in Dark",id:"building-in-dark",children:[],level:2}],h={toc:p};function k(e){var t=e.components,r=(0,l.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},h,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"It can be hard to keep up with all of the changes in your Slack workspace! This\ntutorial will walk you through how to build a simple tool in Dark that posts all\nnew, public Slack channels created in your Slack workspace in the past 24 hours."),(0,o.kt)("p",null,"A full sample canvas for this tutorial is available\n",(0,o.kt)("a",{parentName:"p",href:"https://darklang.com/a/sample-slackchannelcheck"},"here"),"."),(0,o.kt)("h2",{id:"slack-configuration"},"Slack Configuration"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://api.slack.com/apps"},"Create a new app in Slack"),"."),(0,o.kt)("li",{parentName:"ol"},"Navigate to ",(0,o.kt)("strong",{parentName:"li"},"Features -> OAuth& Permissions"),", scroll down to scopes and add\nthe following bot token scopes: ",(0,o.kt)("inlineCode",{parentName:"li"},"channels:manage"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"channels:read"),",\n",(0,o.kt)("inlineCode",{parentName:"li"},"chat:write"),", and ",(0,o.kt)("inlineCode",{parentName:"li"},"chat:write.public"),". This will allow our app to interact\nwith our the channels (also known as conversations) and post messages about\nthem.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"slack-apps/tutorials/channelcheck/bottokenscopes.png",src:n(14261).Z})),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Install your app to the workspace (either via ",(0,o.kt)("strong",{parentName:"li"},"Settings -> Basic\nInformation")," or ",(0,o.kt)("strong",{parentName:"li"},"Settings -> Install App"),"). Since this app is being built\nfor your workspace specifically, we will not need to set up full OAuth, like\nwe would if we wanted to distribute this more publicly."),(0,o.kt)("li",{parentName:"ol"},"Copy your bot user access token, which will now be available under ",(0,o.kt)("strong",{parentName:"li"},"Settings\n-> Install")," app and save it as a function in your Dark canvas. Use this\nfunction wherever you see ",(0,o.kt)("inlineCode",{parentName:"li"},"token")," in the code examples."),(0,o.kt)("li",{parentName:"ol"},"If no new channels have been created in your Slack recently, create a new\npublic channel so we have some data to work with."),(0,o.kt)("li",{parentName:"ol"},"You will need to choose a Slack channel to post your messages to. You can\nfind your Slack channel's id by navigating to the channel and looking for the\n11 character string that begins with a capital C - it will look something\nlike ",(0,o.kt)("inlineCode",{parentName:"li"},"C1234567891"),". Add that to its own Dark function as well, and use it\nwherever you see ",(0,o.kt)("inlineCode",{parentName:"li"},"channel")," in the code examples.")),(0,o.kt)("h2",{id:"building-in-dark"},"Building in Dark"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a new daily Cron named ",(0,o.kt)("inlineCode",{parentName:"li"},"checkForNewChannels")," by clicking the + in the\nsidebar next to Cron, and call the\n",(0,o.kt)("a",{parentName:"li",href:"/packages#getnewconversations"},(0,o.kt)("inlineCode",{parentName:"a"},"getNewConversations")," Slack function")," (it's a\nlittle confusing, but channels are referred to as conversations in the Slack\nAPI). The ",(0,o.kt)("inlineCode",{parentName:"li"},"getNewConversations")," function is built into Dark's\n",(0,o.kt)("a",{parentName:"li",href:"/packages"},"package manager"),", and it takes your token as well as an amount of\ntime to check in Epoch seconds. Here, we're asking it to check in the past 24\nhours, which is equivalent to 86400 seconds.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"slack-apps/tutorials/channelcheck/checkfornewchannels.png",src:n(18940).Z})),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Click the play button on the\n",(0,o.kt)("a",{parentName:"li",href:"/packages#getnewconversations"},(0,o.kt)("inlineCode",{parentName:"a"},"getNewConversations")," function")," and then\nplace your carat in ",(0,o.kt)("inlineCode",{parentName:"li"},"newChannels"),". You will see a list of information about\nany new channels that have been created.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"slack-apps/tutorials/channelcheck/checkfornewchannelslive.png",src:n(32517).Z})),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Create a function called ",(0,o.kt)("inlineCode",{parentName:"li"},"formatChannelList")," with a ",(0,o.kt)("inlineCode",{parentName:"li"},"channelList")," parameter.\nThis is where we're going to build the format of the messages Slack will\nprint about your new channels, but for now, just return ",(0,o.kt)("inlineCode",{parentName:"li"},"channelList"),". You'll\nnotice that an error is shown - this is because ",(0,o.kt)("inlineCode",{parentName:"li"},"channelList")," has not yet\nbeen set.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"slack-apps/tutorials/channelcheck/firstformatchannel.png",src:n(2562).Z})),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Return to your ",(0,o.kt)("inlineCode",{parentName:"li"},"checkForNewChannels")," Cron, and add a line to format the\n",(0,o.kt)("inlineCode",{parentName:"li"},"newChannels")," list you previously generated. Press the play button.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"slack-apps/tutorials/channelcheck/checkfornewchannelslist.png",src:n(3378).Z})),(0,o.kt)("ol",{start:5},(0,o.kt)("li",{parentName:"ol"},"Return to your ",(0,o.kt)("inlineCode",{parentName:"li"},"formatChannelList")," function and place your carat over the top\ndot (trace) on the left. You will see your ",(0,o.kt)("inlineCode",{parentName:"li"},"channelList")," trace - now you can\nwork with that data in order to format your list.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"slack-apps/tutorials/channelcheck/formatchannellist.png",src:n(73434).Z})),(0,o.kt)("ol",{start:6},(0,o.kt)("li",{parentName:"ol"},"For our purposes, we're going to do a very simple amount of formatting -\nwe're going to add the markdown Slack needs to make channel names links, and\nadd information about the channel's purpose. However, lots of information\nabout Slack channels is available. Type ",(0,o.kt)("inlineCode",{parentName:"li"},"val.")," and scroll through the\nautocomplete to see all of your options.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"slack-apps/tutorials/channelcheck/formatchanellistlong.png",src:n(8934).Z})),(0,o.kt)("ol",{start:7},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In your ",(0,o.kt)("inlineCode",{parentName:"p"},"checkForNewChannels")," Cron, rerun ",(0,o.kt)("inlineCode",{parentName:"p"},"formatChannelList")," to update the\nvalue of ",(0,o.kt)("inlineCode",{parentName:"p"},"formattedList"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Add a check for the length of the list - we're going to print out something\ndifferent if there have been no new channels."))),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"slack-apps/tutorials/channelcheck/listlength.png",src:n(3279).Z})),(0,o.kt)("ol",{start:9},(0,o.kt)("li",{parentName:"ol"},"The full code is going to look like this - if there are entries in the list,\nwe'll post an announcement message and then the list of new channels. You'll\nnotice that we also use the\n",(0,o.kt)("a",{parentName:"li",href:"/packages#postmarkdownmessage"},(0,o.kt)("inlineCode",{parentName:"a"},"postMarkDownMessage")," Slack function")," to\nsimplify the posting of the message.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"slack-apps/tutorials/channelcheck/fullcheckfornewchannels.png",src:n(21173).Z})),(0,o.kt)("ol",{start:10},(0,o.kt)("li",{parentName:"ol"},"To make our code a little bit cleaner, we've pulled the logic of posting the\nlist of new channels out into a function. This function iterates through the\nlist it is given and posts a markdown message to Slack for each entry.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"slack-apps/tutorials/channelcheck/postlist.png",src:n(83925).Z})),(0,o.kt)("ol",{start:11},(0,o.kt)("li",{parentName:"ol"},"Once you've completed all of your code, run the Cron again. A message will\nappear in the channel you selected.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"slack-apps/tutorials/channelcheck/newchannelpost.png",src:n(55096).Z})),(0,o.kt)("p",null,"Congratulations - you now have a Slack app that will post every 24 hours with\nany new channels created since it last posted."))}k.isMDXComponent=!0},14261:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/bottokenscopes-820944f97bebf411312b68773873a3ef.png"},18940:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/checkfornewchannels-9b7c4680fc415baeb1ced35d23835f19.png"},3378:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/checkfornewchannelslist-b13aa08e69cac3f0a7f6e24eda142415.png"},32517:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/checkfornewchannelslive-38b563faeb4b96ae7a39d62d15f4b265.png"},2562:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/firstformatchannel-40989a65e71ac0fb01f8cf5ea3149be1.png"},73434:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/formatchannellist-722aac833e2f8fa532d47cdaa38e175b.png"},8934:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/formatchannellistlong-4c39c2a5963f93c916aa5c35bcac9511.png"},21173:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/fullcheckfornewchannels-9ed508c7641a6276213e638b927f584c.png"},3279:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/listlength-f414fe87dbf3e6be972434e4a6d772fe.png"},55096:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/newchannelpost-fa43d6265fbb5344be5d6ccb58a49926.png"},83925:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/postlist-536b7664f9adb1eae65605e80142a73a.png"}}]);