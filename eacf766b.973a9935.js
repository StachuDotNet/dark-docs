(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{234:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return c}));var r=n(2),a=n(11),o=(n(0),n(241)),i={title:"If you don't know OCaml"},s={id:"contributing/if-you-dont-know-ocaml",isDocsHomePage:!1,title:"If you don't know OCaml",description:"OCaml can be a little bit daunting, but even if you don't know it, there are a bunch of ways to get involved.",source:"@site/docs/contributing/if-you-dont-know-ocaml.md",permalink:"/docs/contributing/if-you-dont-know-ocaml",sidebar:"Contributing",previous:{title:"Your next contribution",permalink:"/docs/contributing/next-contribution"},next:{title:"Adding a built-in function",permalink:"/docs/contributing/adding-a-function"}},l=[{value:"Other languages",id:"other-languages",children:[]},{value:"Non-code",id:"non-code",children:[]},{value:"Writing docs",id:"writing-docs",children:[]},{value:"Writing issues",id:"writing-issues",children:[{value:"Fluid editor",id:"fluid-editor",children:[]},{value:"Better error messages",id:"better-error-messages",children:[]}]},{value:"Learning OCaml",id:"learning-ocaml",children:[]}],u={rightToc:l};function c(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"OCaml can be a little bit daunting, but even if you don't know it, there are a bunch of ways to get involved."),Object(o.b)("h2",{id:"other-languages"},"Other languages"),Object(o.b)("p",null,"Dark has a number of different languages, including Rust, bash, Python, Javascript, HTML, and CSS."),Object(o.b)("p",null,"We have issues in each of these:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/darklang/dark/issues?q=is%3Aissue+is%3Aopen+label%3Ajavascript"}),"Javascript")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/darklang/dark/issues?q=is%3Aissue+is%3Aopen+label%3Arust"}),"Rust")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/darklang/dark/issues?q=is%3Aissue+is%3Aopen+label%3Abash"}),"Bash"))),Object(o.b)("h2",{id:"non-code"},"Non-code"),Object(o.b)("p",null,"Lots of times we don't know what to do, and it's extremely valuable to have\nsomeone look into the problem and document what's happening. These issues are\nlabeled ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/darklang/dark/issues?q=is%3Aissue+is%3Aopen+label%3Ainvestigation"}),'"investigation"'),"."),Object(o.b)("p",null,'Similar, the "',Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/darklang/dark/issues?q=is%3Aissue+is%3Aopen+label%3Aneeds-thought"}),"needs thought"),'" issue is about designing thoughtful solutions to sticky problems.'),Object(o.b)("h2",{id:"writing-docs"},"Writing docs"),Object(o.b)("p",null,"There are lots of docs that would be very helpful to write. If you look at the\n",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://darklang.github.io/docs"}),"current docs"),", there are docs that would be useful\nthat you can write as a non-expert."),Object(o.b)("p",null,"There are a bunch of\n",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://darklang.github.io/docs/tutorials/tutorial-intro"}),"tutorials")," for\ndifferent technologies, frameworks and libraries; writing one for another would\nbe extremely useful. It would also allow you to write up how Dark could be\nimproved to support that technology. You can even make ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.youtube.com/c/Darklang/videos"}),"video\ntutorials"),"!"),Object(o.b)("p",null,"Similarly, we have some guides for people learning Dark who know other\nlanguages. Adding another language would be wonderful. See for example the\n",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://darklang.github.io/docs/from-python"}),"Python version"),"."),Object(o.b)("h2",{id:"writing-issues"},"Writing issues"),Object(o.b)("p",null,"Dark has many bugs and problems: documenting them for other contributors to fix\nwould be very useful. Small, compact descriptions with instructions to\nreproduce the bugs are very welcome."),Object(o.b)("h3",{id:"fluid-editor"},"Fluid editor"),Object(o.b)("p",null,'The "fluid" editor is how you write code in Dark. It is still often the case\nthat you get an unexpected result when you type something: documenting\nindividual cases as issues is very valuable!'),Object(o.b)("h3",{id:"better-error-messages"},"Better error messages"),Object(o.b)("p",null,"Dark's error messages are not as good as they could be, and this is a real\nproblem for users learning the language the first time. Documenting a bad error\nmessage, especially with a suggested better version, is a really useful\ncontribution."),Object(o.b)("h2",{id:"learning-ocaml"},"Learning OCaml"),Object(o.b)("p",null,"Dark is almost everybody's first OCaml project. So if you don't know OCaml,\njoin the club - we all learned as we contributed to Dark."),Object(o.b)("p",null,"There are a number of resources to help as well:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/contributing/adding-your-first-test"}),"A guided walkthrough of making your first PR")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/darklang/dark/issues?q=is%3Aopen+is%3Aissue+label%3Agood-first-bug"}),"good first bugs")," assume you don't know anything about OCaml")),Object(o.b)("p",null,"Alos, some bugs, especially our\n",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/darklang/dark/issues?q=is%3Aopen+is%3Aissue+label%3Ainitiative"}),"initiatives"),",\nrequire almost no OCaml knowledge, despite the fact that they are in OCaml\nparts of the codebase. People with no prior exposure to OCaml should be able to\nmake a useful change to one of these in very little time."))}c.isMDXComponent=!0},241:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return h}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),c=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=c(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),b=c(n),p=r,h=b["".concat(i,".").concat(p)]||b[p]||d[p]||o;return n?a.a.createElement(h,s(s({ref:t},u),{},{components:n})):a.a.createElement(h,s({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);