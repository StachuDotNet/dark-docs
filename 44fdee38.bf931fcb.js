(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{179:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(11),l=(a(0),a(241)),i={id:"external-db",title:"Using an External DB",sidebar_label:"Using an External DB"},o={id:"tutorials/external-db",isDocsHomePage:!1,title:"Using an External DB",description:"Your project may require a more complex data structure than our datastores. If a",source:"@site/docs/tutorials/external-db.md",permalink:"/tutorials/external-db",sidebar_label:"Using an External DB",sidebar:"Tutorials",previous:{title:"Alerting with IFTTT",permalink:"/tutorials/ifttt-alerts"},next:{title:"Airtable Sample",permalink:"/tutorials/airtable"}},b=[{value:"Set Up",id:"set-up",children:[]},{value:"POST a New Record",id:"post-a-new-record",children:[]},{value:"GET All Data",id:"get-all-data",children:[]}],c={rightToc:b};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Your project may require a more complex data structure than our datastores. If a\nkey-value store works, we strongly recommend using the built-in datastore to\ntake advantage of language functions."),Object(l.b)("p",null,"If you already have (or otherwise require) an external database, any external\ndatabase that provides a REST API can be used. For the purposes of this\ntutorial, we will be using ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://restdb.io"}),"restdb.io"),"."),Object(l.b)("h2",{id:"set-up"},"Set Up"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Create a new database.")),Object(l.b)("p",null,Object(l.b)("img",Object(n.a)({parentName:"p"},{src:"/img/tutorials/external-db/create-db.png",alt:"external-db/create-db.png"}))),Object(l.b)("ol",{start:2},Object(l.b)("li",{parentName:"ol"},"Select ",Object(l.b)("strong",{parentName:"li"},"Developer Mode")," in the upper right, and then choose\n",Object(l.b)("strong",{parentName:"li"},"Collections +"))),Object(l.b)("p",null,Object(l.b)("img",Object(n.a)({parentName:"p"},{src:"/img/tutorials/external-db/add-collection.png",alt:"external-db/add-collection.png"}))),Object(l.b)("ol",{start:3},Object(l.b)("li",{parentName:"ol"},"Enter the information for your new collection and click ",Object(l.b)("strong",{parentName:"li"},"Save"),".")),Object(l.b)("p",null,Object(l.b)("img",Object(n.a)({parentName:"p"},{src:"/img/tutorials/external-db/collection.png",alt:"external-db/collection.png"}))),Object(l.b)("ol",{start:4},Object(l.b)("li",{parentName:"ol"},"Add Name and Description text fields to your database by clicking ",Object(l.b)("strong",{parentName:"li"},"Add\nFields +"),".")),Object(l.b)("p",null,Object(l.b)("img",Object(n.a)({parentName:"p"},{src:"/img/tutorials/external-db/add-fields.png",alt:"external-db/add-field.png"}))),Object(l.b)("p",null,Object(l.b)("img",Object(n.a)({parentName:"p"},{src:"/img/tutorials/external-db/fields.png",alt:"external-db/fields.png"}))),Object(l.b)("ol",{start:5},Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Grab your API Key by clicking on API Docs and finding the value labeled\n",Object(l.b)("inlineCode",{parentName:"p"},"x-apikey:"),". Save it as a function in your Dark canvas.")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Optionally, also grab the URL at the top of your page (in my case, its\n",Object(l.b)("inlineCode",{parentName:"p"},"https://mydatastore-e7f9.restdb.io/rest/mydata"),") and save it as another\nfunction in your Dark canvas."))),Object(l.b)("h2",{id:"post-a-new-record"},"POST a New Record"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Create your header by doing a ",Object(l.b)("inlineCode",{parentName:"p"},"Dict::merge")," on ",Object(l.b)("inlineCode",{parentName:"p"},"HttpClient::jsonContentType"),"\nand a dict containing your API Key")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Write an ",Object(l.b)("inlineCode",{parentName:"p"},"HttpClient::post")," using your URL, your fields (note: the field\nnames are case sensitive) and your header, and then run it."))),Object(l.b)("p",null,Object(l.b)("img",Object(n.a)({parentName:"p"},{src:"/img/tutorials/external-db/post.png",alt:"external-db/post.png"}))),Object(l.b)("ol",{start:3},Object(l.b)("li",{parentName:"ol"},"Your data will appear in the restdb.io console.")),Object(l.b)("p",null,Object(l.b)("img",Object(n.a)({parentName:"p"},{src:"/img/tutorials/external-db/data.png",alt:"external-db/data.png"}))),Object(l.b)("h2",{id:"get-all-data"},"GET All Data"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Create your header by doing a ",Object(l.b)("inlineCode",{parentName:"p"},"Dict::merge")," on ",Object(l.b)("inlineCode",{parentName:"p"},"HttpClient::jsonContentType"),"\nand a dict containing your API Key.")),Object(l.b)("li",{parentName:"ol"},Object(l.b)("p",{parentName:"li"},"Write an ",Object(l.b)("inlineCode",{parentName:"p"},"HttpClient::get")," using your URL and header, and then run it."))),Object(l.b)("p",null,Object(l.b)("img",Object(n.a)({parentName:"p"},{src:"/img/tutorials/external-db/get-all.png",alt:"external-db/get-all.png"}))),Object(l.b)("ol",{start:3},Object(l.b)("li",{parentName:"ol"},"Your handler will return all of the data in your database.")),Object(l.b)("p",null,Object(l.b)("img",Object(n.a)({parentName:"p"},{src:"/img/tutorials/external-db/get-all-data.png",alt:"external-db/get-all-data.png"}))))}p.isMDXComponent=!0},241:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),p=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),d=p(a),u=n,m=d["".concat(i,".").concat(u)]||d[u]||s[u]||l;return a?r.a.createElement(m,o(o({ref:t},c),{},{components:a})):r.a.createElement(m,o({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var b in t)hasOwnProperty.call(t,b)&&(o[b]=t[b]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var c=2;c<l;c++)i[c]=a[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);